[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\sang0\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\sang0\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.4 (Oracle Corporation Java 20.0.1)
[debug] Load.defaultLoad until apply took 126.9267ms
[debug]           Load.loadUnit: plugins took 73.7954ms
[debug]           Load.loadUnit: defsScala took 0.2726ms
[debug] [Loading] Scanning directory C:\Users\sang0\IdeaProjects\DataHandler\project
[debug]             Load.loadUnit: mkEval took 3.5539ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\sang0\IdeaProjects\DataHandler\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 8.5535 ms
[info] loading settings for project datahandler-build from assembly.sbt,plugins.sbt,idea.sbt ...
[debug]               Load.resolveProject(datahandler-build) took 24.4217ms
[debug]             Load.loadTransitive: finalizeProject(Project(id datahandler-build, base: C:\Users\sang0\IdeaProjects\DataHandler\project, plugins: List(<none>))) took 37.7757ms
[debug] [Loading] Done in C:\Users\sang0\IdeaProjects\DataHandler\project, returning: (datahandler-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2521.4935ms
[debug]           Load.loadUnit: cleanEvalClasses took 8.9341ms
[debug]         Load.loadUnit(file:/C:/Users/sang0/IdeaProjects/DataHandler/project/, ...) took 2607.9118ms
[debug]       Load.apply: load took 2703.7393ms
[debug]       Load.apply: resolveProjects took 3.0694ms
[debug]       Load.apply: finalTransforms took 47.1768ms
[debug]       Load.apply: config.delegates took 11.0666ms
[debug]       Load.apply: Def.make(settings)... took 521.9732ms
[debug]       Load.apply: structureIndex took 152.9978ms
[debug]       Load.apply: mkStreams took 3.9794ms
[info] loading project definition from C:\Users\sang0\IdeaProjects\DataHandler\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 5315.5918ms
[debug]     Load.loadUnit: defsScala took 0.0041ms
[debug] [Loading] Scanning directory C:\Users\sang0\IdeaProjects\DataHandler
[debug]       Load.loadUnit: mkEval took 0.3012ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtassembly.AssemblyPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,sbt.plugins.JUnitXmlReportPlugin,sbtassembly.AssemblyPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.3696 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 21.7994ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\sang0\IdeaProjects\DataHandler, plugins: List(<none>))) took 23.8071ms
[debug] [Loading] Done in C:\Users\sang0\IdeaProjects\DataHandler, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1318.633ms
[debug]     Load.loadUnit: cleanEvalClasses took 16.569ms
[debug]   Load.loadUnit(file:/C:/Users/sang0/IdeaProjects/DataHandler/, ...) took 6651.9098ms
[debug] Load.apply: load took 6665.8003ms
[debug] Load.apply: resolveProjects took 0.0999ms
[debug] Load.apply: finalTransforms took 16.6688ms
[debug] Load.apply: config.delegates took 0.1926ms
[debug] Load.apply: Def.make(settings)... took 69.4954ms
[debug] Load.apply: structureIndex took 18.4997ms
[debug] Load.apply: mkStreams took 0.0023ms
[info] set current project to DataHandler (in build file:/C:/Users/sang0/IdeaProjects/DataHandler/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(idea-shell, None, None)
